//
//  {{ module_name }}Interactor
//  {{ project_name }}
//
//  Created by {{ developer_name }} on {{ date }}.
//

import CollectionComposer
import CollectionComposerVIPERExtension
import Foundation

{% if has_repository %}
protocol {{ module_name }}InteractorInput: ComposedViewFetchableInteractorInput where Entity == // TODO: Specify entity {
{% else %}
protocol {{ module_name }}InteractorInput {
{% endif %}
    // MARK: Methods called from presenter
}

protocol {{ module_name }}InteractorOutput: AnyObject {
    // MARK: Callback methods for presenter
}

final class {{ module_name }}Interactor {
    // MARK: VIPER property
    weak var presenter: (any {{ module_name }}InteractorOutput)!

    init() {}

    // MARK: Other private methods
}

extension {{ module_name }}Interactor: {{ module_name }}InteractorInput {
{% if has_repository %}
    func fetch(force: Bool) async throws {
        return // TODO: return Entity
    }
{% endif %}
}